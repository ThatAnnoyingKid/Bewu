searchState.loadedDescShard("vidstreaming", 0, "Anime Type\nFailed to decode a value from base64\nFailed to decode a value from base64\nThe vidstreaming client\nAn error occured while decrypting a crypto data value\nAn error occured while using crypto to decrypt a crypto …\nFailed to decrypt video data\nAn error that may occur while decrypting video data\nDubbed\nFailed to encode id\nThe encrypted video data\nAn episode\nThe library error type\nAn error that may occur while generating a video data url\nInvalid entry\nInvalid episode\nError that may occur while parsing an episode from a doc\nInvalid Key or Iv length\nInvalid Key or Iv length\nInvalid related episode\nInvalid search results\nError that may occur while parsing search results\nInvalid url\nInvalid URL\nFailed to parse a url\nA value was not utf8\nA value was not utf8\nInvalid video player\nError that may occur while parsing a <code>VideoPlayer</code>\nFailed to parse video data\nMissing crypto data value\nMissing Link Server Url\nMissing name\nMissing request iv\nMissing request key\nMissing response key\nMissing results\nMissing url\nMissing url\nMissing url host\nMissing Video Id\nMissing video player url\nPadding error\nPadding error\nAn error that may occur while parsing an <code>AnimeType</code>\nRAW\nA HTTP error\nSearch results\nSubbed\nA tokio join error\nVideo data\nVideo source\nVideo player for an episode\n?\nGet this as a str.\nThe inner http client\ncrypto data value\nThe encrypted video data\nDecrypt this video data\nDecrypt the <code>crypto_data_value</code> field.\nEpisode description\nEncode a video id\nEntries in this result\nVideo url\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate the url for the video data.\nGet the best source.\nGet an episode by url\nGet the id of the episode.\nGet an episode’s video player by url\nGet the video data for a given video player\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if it is <code>Dub</code>.\nReturns true if this is an hls stream\nReturns true if this is an mp4\nReturns <code>true</code> if it is <code>Raw</code>.\nReturns <code>true</code> if it is <code>Sub</code>.\nStream kind\nStream label\nThe back-up url if the sources fail\nEpisode name\nMake a new client\nRelated episode urls\nThe request iv\nThe request key\nThe response key\nSearch with the given query and page number.\nGet the title of the series.\nThe sources\nThe original sources?\nSources\nUnknown KVs\nUnknown KVs\nEpisode Url\nVideo Player url for episode")